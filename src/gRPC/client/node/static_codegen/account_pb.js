// source: account.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var types_access_types_pb = require('./types/access.types_pb.js');
goog.object.extend(proto, types_access_types_pb);
var types_account_types_pb = require('./types/account.types_pb.js');
goog.object.extend(proto, types_account_types_pb);
goog.exportSymbol('proto.account.AccountRequest', null, global);
goog.exportSymbol('proto.account.AccountResponse', null, global);
goog.exportSymbol('proto.account.Query', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.account.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.account.Query.repeatedFields_, null);
};
goog.inherits(proto.account.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.account.Query.displayName = 'proto.account.Query';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.account.AccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.account.AccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.account.AccountRequest.displayName = 'proto.account.AccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.account.AccountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.account.AccountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.account.AccountResponse.displayName = 'proto.account.AccountResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.account.Query.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.account.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.account.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.account.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.account.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    withList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.account.Query}
 */
proto.account.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.account.Query;
  return proto.account.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.account.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.account.Query}
 */
proto.account.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addWith(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.account.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.account.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.account.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.account.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string with = 1;
 * @return {!Array<string>}
 */
proto.account.Query.prototype.getWithList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.account.Query} returns this
 */
proto.account.Query.prototype.setWithList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.account.Query} returns this
 */
proto.account.Query.prototype.addWith = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.account.Query} returns this
 */
proto.account.Query.prototype.clearWithList = function() {
  return this.setWithList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.account.AccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.account.AccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.account.AccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.account.AccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    access: (f = msg.getAccess()) && types_access_types_pb.Access.toObject(includeInstance, f),
    query: (f = msg.getQuery()) && proto.account.Query.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.account.AccountRequest}
 */
proto.account.AccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.account.AccountRequest;
  return proto.account.AccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.account.AccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.account.AccountRequest}
 */
proto.account.AccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_access_types_pb.Access;
      reader.readMessage(value,types_access_types_pb.Access.deserializeBinaryFromReader);
      msg.setAccess(value);
      break;
    case 2:
      var value = new proto.account.Query;
      reader.readMessage(value,proto.account.Query.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.account.AccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.account.AccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.account.AccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.account.AccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccess();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_access_types_pb.Access.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.account.Query.serializeBinaryToWriter
    );
  }
};


/**
 * optional access.types.Access access = 1;
 * @return {?proto.access.types.Access}
 */
proto.account.AccountRequest.prototype.getAccess = function() {
  return /** @type{?proto.access.types.Access} */ (
    jspb.Message.getWrapperField(this, types_access_types_pb.Access, 1));
};


/**
 * @param {?proto.access.types.Access|undefined} value
 * @return {!proto.account.AccountRequest} returns this
*/
proto.account.AccountRequest.prototype.setAccess = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.account.AccountRequest} returns this
 */
proto.account.AccountRequest.prototype.clearAccess = function() {
  return this.setAccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.account.AccountRequest.prototype.hasAccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Query query = 2;
 * @return {?proto.account.Query}
 */
proto.account.AccountRequest.prototype.getQuery = function() {
  return /** @type{?proto.account.Query} */ (
    jspb.Message.getWrapperField(this, proto.account.Query, 2));
};


/**
 * @param {?proto.account.Query|undefined} value
 * @return {!proto.account.AccountRequest} returns this
*/
proto.account.AccountRequest.prototype.setQuery = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.account.AccountRequest} returns this
 */
proto.account.AccountRequest.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.account.AccountRequest.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.account.AccountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.account.AccountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.account.AccountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.account.AccountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subdomain: jspb.Message.getFieldWithDefault(msg, 3, ""),
    currentUserId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    country: jspb.Message.getFieldWithDefault(msg, 5, ""),
    customersMode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isUnsortedOn: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    isLossReasonEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    isHelpbotEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    isTechnicalAccount: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    contactNameDisplayOrder: jspb.Message.getFieldWithDefault(msg, 11, 0),
    amojoId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    version: jspb.Message.getFieldWithDefault(msg, 13, 0),
    driveUrl: jspb.Message.getFieldWithDefault(msg, 14, ""),
    isApiFilterEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    entityNames: (f = msg.getEntityNames()) && types_account_types_pb.EntityNames.toObject(includeInstance, f),
    invoicesSettings: (f = msg.getInvoicesSettings()) && types_account_types_pb.invoicesSettings.toObject(includeInstance, f),
    embedded: (f = msg.getEmbedded()) && types_account_types_pb.Embedded.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.account.AccountResponse}
 */
proto.account.AccountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.account.AccountResponse;
  return proto.account.AccountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.account.AccountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.account.AccountResponse}
 */
proto.account.AccountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubdomain(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrentUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomersMode(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsUnsortedOn(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLossReasonEnabled(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHelpbotEnabled(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTechnicalAccount(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setContactNameDisplayOrder(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmojoId(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriveUrl(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsApiFilterEnabled(value);
      break;
    case 16:
      var value = new types_account_types_pb.EntityNames;
      reader.readMessage(value,types_account_types_pb.EntityNames.deserializeBinaryFromReader);
      msg.setEntityNames(value);
      break;
    case 17:
      var value = new types_account_types_pb.invoicesSettings;
      reader.readMessage(value,types_account_types_pb.invoicesSettings.deserializeBinaryFromReader);
      msg.setInvoicesSettings(value);
      break;
    case 18:
      var value = new types_account_types_pb.Embedded;
      reader.readMessage(value,types_account_types_pb.Embedded.deserializeBinaryFromReader);
      msg.setEmbedded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.account.AccountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.account.AccountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.account.AccountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.account.AccountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubdomain();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurrentUserId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCustomersMode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsUnsortedOn();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getIsLossReasonEnabled();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getIsHelpbotEnabled();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsTechnicalAccount();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getContactNameDisplayOrder();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getEntityNames();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      types_account_types_pb.EntityNames.serializeBinaryToWriter
    );
  }
  f = message.getInvoicesSettings();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      types_account_types_pb.invoicesSettings.serializeBinaryToWriter
    );
  }
  f = message.getEmbedded();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      types_account_types_pb.Embedded.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.account.AccountResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.account.AccountResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subdomain = 3;
 * @return {string}
 */
proto.account.AccountResponse.prototype.getSubdomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setSubdomain = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 current_user_id = 4;
 * @return {number}
 */
proto.account.AccountResponse.prototype.getCurrentUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setCurrentUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string country = 5;
 * @return {string}
 */
proto.account.AccountResponse.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string customers_mode = 6;
 * @return {string}
 */
proto.account.AccountResponse.prototype.getCustomersMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setCustomersMode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_unsorted_on = 7;
 * @return {boolean}
 */
proto.account.AccountResponse.prototype.getIsUnsortedOn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setIsUnsortedOn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool is_loss_reason_enabled = 8;
 * @return {boolean}
 */
proto.account.AccountResponse.prototype.getIsLossReasonEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setIsLossReasonEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool is_helpbot_enabled = 9;
 * @return {boolean}
 */
proto.account.AccountResponse.prototype.getIsHelpbotEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setIsHelpbotEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool is_technical_account = 10;
 * @return {boolean}
 */
proto.account.AccountResponse.prototype.getIsTechnicalAccount = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setIsTechnicalAccount = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional int32 contact_name_display_order = 11;
 * @return {number}
 */
proto.account.AccountResponse.prototype.getContactNameDisplayOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setContactNameDisplayOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string amojo_id = 12;
 * @return {string}
 */
proto.account.AccountResponse.prototype.getAmojoId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setAmojoId = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.clearAmojoId = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.account.AccountResponse.prototype.hasAmojoId = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 version = 13;
 * @return {number}
 */
proto.account.AccountResponse.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.account.AccountResponse.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string drive_url = 14;
 * @return {string}
 */
proto.account.AccountResponse.prototype.getDriveUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setDriveUrl = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.clearDriveUrl = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.account.AccountResponse.prototype.hasDriveUrl = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool is_api_filter_enabled = 15;
 * @return {boolean}
 */
proto.account.AccountResponse.prototype.getIsApiFilterEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.setIsApiFilterEnabled = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.clearIsApiFilterEnabled = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.account.AccountResponse.prototype.hasIsApiFilterEnabled = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional types.EntityNames entity_names = 16;
 * @return {?proto.account.types.EntityNames}
 */
proto.account.AccountResponse.prototype.getEntityNames = function() {
  return /** @type{?proto.account.types.EntityNames} */ (
    jspb.Message.getWrapperField(this, types_account_types_pb.EntityNames, 16));
};


/**
 * @param {?proto.account.types.EntityNames|undefined} value
 * @return {!proto.account.AccountResponse} returns this
*/
proto.account.AccountResponse.prototype.setEntityNames = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.clearEntityNames = function() {
  return this.setEntityNames(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.account.AccountResponse.prototype.hasEntityNames = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional types.invoicesSettings invoices_settings = 17;
 * @return {?proto.account.types.invoicesSettings}
 */
proto.account.AccountResponse.prototype.getInvoicesSettings = function() {
  return /** @type{?proto.account.types.invoicesSettings} */ (
    jspb.Message.getWrapperField(this, types_account_types_pb.invoicesSettings, 17));
};


/**
 * @param {?proto.account.types.invoicesSettings|undefined} value
 * @return {!proto.account.AccountResponse} returns this
*/
proto.account.AccountResponse.prototype.setInvoicesSettings = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.clearInvoicesSettings = function() {
  return this.setInvoicesSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.account.AccountResponse.prototype.hasInvoicesSettings = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional types.Embedded _embedded = 18;
 * @return {?proto.account.types.Embedded}
 */
proto.account.AccountResponse.prototype.getEmbedded = function() {
  return /** @type{?proto.account.types.Embedded} */ (
    jspb.Message.getWrapperField(this, types_account_types_pb.Embedded, 18));
};


/**
 * @param {?proto.account.types.Embedded|undefined} value
 * @return {!proto.account.AccountResponse} returns this
*/
proto.account.AccountResponse.prototype.setEmbedded = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.account.AccountResponse} returns this
 */
proto.account.AccountResponse.prototype.clearEmbedded = function() {
  return this.setEmbedded(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.account.AccountResponse.prototype.hasEmbedded = function() {
  return jspb.Message.getField(this, 18) != null;
};


goog.object.extend(exports, proto.account);
